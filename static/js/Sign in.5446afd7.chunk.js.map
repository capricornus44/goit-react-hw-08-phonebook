{"version":3,"sources":["components/auth/AuthForm.js","redux/auth/auth-operations.js","pages/authPage/AuthPage.js"],"names":["AuthForm","state","email","password","name","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","isSignupForm","props","signup","signin","match","url","className","this","onSubmit","type","onChange","to","Component","connect","user","dispatch","a","signupRequest","axios","post","returnSecureToken","response","signupSuccess","data","signupError","message","signinRequest","signinSuccess","signinError","withRouter","AuthPage"],"mappings":"ySAMMA,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,KAAM,I,EAGRC,eAAiB,SAAAC,GACf,MAAwBA,EAAEC,OAAlBH,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBL,EAAOI,K,EAG1BE,eAAiB,SAAAJ,GACfA,EAAEK,iBACF,MAAkC,EAAKV,MAA/BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,KAEzB,EAAKQ,eACD,EAAKC,MAAMC,OAAO,CAAEZ,QAAOC,WAAUC,SACrC,EAAKS,MAAME,OAAO,CAAEb,QAAOC,aAE/B,EAAKM,SAAS,CACZP,MAAO,GACPC,SAAU,M,EAIdS,aAAe,WACb,MAAgC,YAAzB,EAAKC,MAAMG,MAAMC,K,4CAG1B,WACE,OACE,qCACE,oBAAIC,UAAU,iBAAd,SACGC,KAAKP,eAAiB,oBAAsB,uBAG/C,uBAAMM,UAAU,YAAYE,SAAUD,KAAKT,eAA3C,UACGS,KAAKP,gBACJ,wBAAOM,UAAU,kBAAjB,kBAEE,uBACEG,KAAK,OACLjB,KAAK,OACLI,MAAOW,KAAKlB,MAAMG,KAClBkB,SAAUH,KAAKd,eACfa,UAAU,uBAKhB,wBAAOA,UAAU,kBAAjB,mBAEE,uBACEG,KAAK,QACLjB,KAAK,QACLI,MAAOW,KAAKlB,MAAMC,MAElBoB,SAAUH,KAAKd,eACfa,UAAU,uBAGd,wBAAOA,UAAU,kBAAjB,sBAEE,uBACEG,KAAK,OACLjB,KAAK,WACLI,MAAOW,KAAKlB,MAAME,SAElBmB,SAAUH,KAAKd,eACfa,UAAU,uBAGd,wBAAQG,KAAK,SAASH,UAAU,mBAAhC,SACGC,KAAKP,eAAiB,UAAY,YAGpCO,KAAKP,eACJ,oBAAGM,UAAU,iBAAb,mDAEE,cAAC,IAAD,CAASK,GAAG,UAAUL,UAAU,qBAAhC,wBAKF,oBAAGA,UAAU,iBAAb,qDAEE,cAAC,IAAD,CAASK,GAAG,UAAUL,UAAU,qBAAhC,kC,GAvFSM,aAkGRC,cAAQ,KAAM,CAAEX,OC9FhB,SAAAY,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACrBD,EAASE,eADY,kBAIIC,IAAMC,KAAN,mIAEhBL,GAFgB,IAEVM,mBAAmB,KANb,OAIbC,EAJa,OASnBN,EAASO,YAAcD,EAASE,OATb,gDAWnBR,EAASS,YAAY,KAAMC,UAXR,yDAAJ,uDD8FoBtB,OC/ExB,SAAAW,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACrBD,EAASW,eADY,kBAIIR,IAAMC,KAAN,+IAEhBL,GAFgB,IAEVM,mBAAmB,KANb,OAIbC,EAJa,OASnBN,EAASY,YAAcN,EAASE,OATb,gDAWnBR,EAASa,YAAY,KAAMH,UAXR,yDAAJ,wDD+EJZ,CAAkCgB,YAAWzC,IE7F7C0C,UARE,WACf,OACE,mCACE,cAAC,EAAD,Q","file":"static/js/Sign in.5446afd7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signin, signup } from '../../redux/auth/auth-operations';\r\nimport './AuthForm.scss';\r\n\r\nclass AuthForm extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n  };\r\n\r\n  onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password, name } = this.state;\r\n\r\n    this.isSignupForm()\r\n      ? this.props.signup({ email, password, name })\r\n      : this.props.signin({ email, password });\r\n\r\n    this.setState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  isSignupForm = () => {\r\n    return this.props.match.url === '/signup';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"auth-page_desc\">\r\n          {this.isSignupForm() ? 'Registration form' : 'Authorization form'}\r\n        </h1>\r\n\r\n        <form className=\"auth-form\" onSubmit={this.onHandleSubmit}>\r\n          {this.isSignupForm() && (\r\n            <label className=\"auth-form_label\">\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.onHandleChange}\r\n                className=\"auth-form_input\"\r\n              />\r\n            </label>\r\n          )}\r\n\r\n          <label className=\"auth-form_label\">\r\n            Email:\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              // autoComplete=\"off\"\r\n              onChange={this.onHandleChange}\r\n              className=\"auth-form_input\"\r\n            />\r\n          </label>\r\n          <label className=\"auth-form_label\">\r\n            Password:\r\n            <input\r\n              type=\"text\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              // autoComplete=\"off\"\r\n              onChange={this.onHandleChange}\r\n              className=\"auth-form_input\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"auth-form_button\">\r\n            {this.isSignupForm() ? 'sign up' : 'sign in'}\r\n          </button>\r\n\r\n          {this.isSignupForm() ? (\r\n            <p className=\"auth-form_info\">\r\n              If you already have an account, please\r\n              <NavLink to=\"/signin\" className=\"auth-form_redirect\">\r\n                Sign in\r\n              </NavLink>\r\n            </p>\r\n          ) : (\r\n            <p className=\"auth-form_info\">\r\n              If you havn't got an account yet, please\r\n              <NavLink to=\"/signup\" className=\"auth-form_redirect\">\r\n                Sign up\r\n              </NavLink>\r\n            </p>\r\n          )}\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { signup, signin })(withRouter(AuthForm));\r\n","import axios from 'axios';\r\nimport {\r\n  signupRequest,\r\n  signupSuccess,\r\n  signupError,\r\n  signinRequest,\r\n  signinSuccess,\r\n  signinError,\r\n} from './auth-actions';\r\n\r\nconst signup = user => async dispatch => {\r\n  dispatch(signupRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCNA3Vo4X92zDlQt4W6-FnwrXBbbRb3OP0`,\r\n      { ...user, returnSecureToken: true },\r\n    );\r\n\r\n    dispatch(signupSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(signupError(error.message));\r\n  }\r\n};\r\n\r\nconst signin = user => async dispatch => {\r\n  dispatch(signinRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCNA3Vo4X92zDlQt4W6-FnwrXBbbRb3OP0`,\r\n      { ...user, returnSecureToken: true },\r\n    );\r\n\r\n    dispatch(signinSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(signinError(error.message));\r\n  }\r\n};\r\n\r\nexport { signup, signin };\r\n","import React from 'react';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <>\r\n      <AuthForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"sourceRoot":""}