{"version":3,"sources":["redux/auth/auth-actions.js","redux/phonebook/contact-actions.js","redux/auth/auth-reducers.js","redux/phonebook/contact-reducers.js","redux/store.js","components/navigation/NavigationListItem.js","redux/auth/auth-selectors.js","components/userMenu/avatar.png","components/userMenu/UserMenu.js","components/navigation/NavigationList.js","routes/mainRoutes.js","components/header/Header.js","components/routes/PrivateRoute.js","components/routes/PublicRoute.js","components/navigation/NavigationRoutes.js","components/main/Main.js","components/app/App.js","index.js"],"names":["signupRequest","createAction","signupSuccess","signupError","signinRequest","signinSuccess","signinError","logoutSuccess","logoutError","getCurrentUserSuccess","getCurrentUserError","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","payload","target","value","initUserState","email","idToken","refreshToken","localId","user","createReducer","_","setError","error","combineReducers","items","state","filter","contact","id","authPersistConfig","key","version","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","auth","persistReducer","contacts","contactReducer","devTools","process","persistor","persistStore","NavigationListItem","isAuth","isPrivate","isRestricted","path","exact","name","className","to","activeClassName","getUsername","connect","avatar","src","alt","width","type","onClick","routes","map","route","mainRoutes","component","lazy","Header","PrivateRoute","PublicRoute","fallback","Main","App","Component","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bef60225.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const signupRequest = createAction('auth/registerRequest');\r\nexport const signupSuccess = createAction('auth/registerSuccess');\r\nexport const signupError = createAction('auth/registerError');\r\n\r\nexport const signinRequest = createAction('auth/loginRequest');\r\nexport const signinSuccess = createAction('auth/loginSuccess');\r\nexport const signinError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","import { createAction } from \"@reduxjs/toolkit\"\r\n\r\nexport const getContactsRequest = createAction('@contact/getRequest');\r\nexport const getContactsSuccess = createAction('@contact/getSuccess');\r\nexport const getContactsError = createAction('@contact/getError');\r\n\r\nexport const addContactRequest = createAction('@contact/addRequest');\r\nexport const addContactSuccess = createAction('@contact/addSuccess');\r\nexport const addContactError = createAction('@contact/addError');\r\n\r\nexport const deleteContactRequest = createAction('@contact/deleteRequest');\r\nexport const deleteContactSuccess = createAction('@contact/deleteSuccess');\r\nexport const deleteContactError = createAction('@contact/deleteError');\r\n\r\nexport const filterContact = createAction('@contact/filter', ({ target }) => ({\r\n  payload: target.value,\r\n}));\r\n\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  signupSuccess,\r\n  signinSuccess,\r\n  logoutSuccess,\r\n  signupError,\r\n  signinError,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initUserState = {\r\n  email: '',\r\n  idToken: '',\r\n  refreshToken: '',\r\n  localId: '',\r\n};\r\n\r\nexport const user = createReducer(initUserState, {\r\n  [signupSuccess]: (_, { payload }) => payload,\r\n  [signinSuccess]: (_, { payload }) => payload,\r\n  [logoutSuccess]: () => initUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer('', {\r\n  [signupError]: setError,\r\n  [signinError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  error,\r\n});\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  getContactsSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  filterContact,\r\n} from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => [...payload],\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { user } from './auth/auth-reducers';\r\nimport contactReducer from './phonebook/contact-reducers';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  version: 1,\r\n  storage,\r\n  whitelist: ['idToken', 'email', 'localId', 'refreshToken'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: combineReducers({\r\n      user: persistReducer(authPersistConfig, user),\r\n    }),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavigationListItem.scss';\r\n\r\nconst NavigationListItem = ({\r\n  isAuth,\r\n  isPrivate,\r\n  isRestricted,\r\n  path,\r\n  exact,\r\n  name,\r\n}) => {\r\n  return (\r\n    <>\r\n      {!isPrivate && !isRestricted && (\r\n        <li key={path} className=\"navigation_item\">\r\n          <NavLink\r\n            exact={exact}\r\n            to={path}\r\n            className=\"navigation_link\"\r\n            activeClassName=\"navigation_link--active\"\r\n          >\r\n            {name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {isAuth && isPrivate && !isRestricted && (\r\n        <li key={path} className=\"navigation_item\">\r\n          <NavLink\r\n            exact={exact}\r\n            to={path}\r\n            className=\"navigation_link\"\r\n            activeClassName=\"navigation_link--active\"\r\n          >\r\n            {name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {!isAuth && !isPrivate && isRestricted && (\r\n        <li key={path} className=\"navigation_item\">\r\n          <NavLink\r\n            exact={exact}\r\n            to={path}\r\n            className=\"navigation_link\"\r\n            activeClassName=\"navigation_link--active\"\r\n          >\r\n            {name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationListItem;\r\n","export const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nexport const getUsername = state => state.auth.user.email;\r\n","export default __webpack_public_path__ + \"static/media/avatar.dc563b2d.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUsername } from '../../redux/auth/auth-selectors';\r\nimport { logoutSuccess } from '../../redux/auth/auth-actions';\r\nimport avatar from './avatar.png';\r\nimport './UserMenu.scss';\r\n\r\nconst UserMenu = ({ email, avatar, logoutSuccess }) => (\r\n  <div className=\"user\">\r\n    <img src={avatar} alt=\"\" width=\"32px\" className=\"user_avatar\" />\r\n    <span className=\"user_greeting\">{email}</span>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => logoutSuccess()}\r\n      className=\"user_logout-btn\"\r\n    >\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  email: getUsername(state),\r\n  avatar: avatar,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutSuccess })(UserMenu);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NavigationListItem from './NavigationListItem';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport './NavigationList.scss';\r\n\r\nconst NavigationList = ({ routes, isAuth }) => {\r\n  return (\r\n    <ul className=\"navigation_list\">\r\n      {routes.map(route => (\r\n        <NavigationListItem isAuth={isAuth} {...route} key={route.path} />\r\n      ))}\r\n      {isAuth && <UserMenu />}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.user.idToken,\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavigationList);\r\n","import { lazy } from 'react';\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import('../pages/homePage/HomePage' /* webpackChunkName: \"Home\" */),\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: false,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    name: 'Contacts',\r\n    exact: false,\r\n    component: lazy(() =>\r\n      import(\r\n        '../pages/contactsPage/ContactsPage' /* webpackChunkName: \"Contacts\" */\r\n      ),\r\n    ),\r\n    isPrivate: true,\r\n    isRestricted: false,\r\n  },\r\n  {\r\n    path: '/signup',\r\n    name: 'Sign Up',\r\n    exact: false,\r\n    component: lazy(() =>\r\n      import('../pages/authPage/AuthPage' /* webpackChunkName: \"Sign up\" */),\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: true,\r\n  },\r\n  {\r\n    path: '/signin',\r\n    name: 'Sign In',\r\n    exact: false,\r\n    component: lazy(() =>\r\n      import('../pages/authPage/AuthPage' /* webpackChunkName: \"Sign in\" */),\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: true,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport NavigationList from '../navigation/NavigationList';\r\nimport { mainRoutes } from '../../routes/mainRoutes';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"navigation\">\r\n        <NavigationList routes={mainRoutes} />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ isAuth, exact, path, component }) => {\r\n  return isAuth ? (\r\n    <Route exact={exact} path={path} component={component} key={path} />\r\n  ) : (\r\n    <Redirect to=\"/signin\" />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ isAuth, exact, path, component, isRestricted }) => {\r\n  return isAuth && isRestricted ? (\r\n    <Redirect to=\"/contacts\" />\r\n  ) : (\r\n    <Route exact={exact} path={path} component={component} key={path} />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { Suspense } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport PrivateRoute from '../routes/PrivateRoute';\r\nimport PublicRoute from '../routes/PublicRoute';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NavigationRoutes = ({ routes, isAuth }) => {\r\n  return (\r\n    <Suspense fallback={<h2 className=\"loader\">...loading</h2>}>\r\n      <Switch>\r\n        {routes.map(route =>\r\n          route.isPrivate ? (\r\n            <PrivateRoute {...route} isAuth={isAuth} key={route.path} />\r\n          ) : (\r\n            <PublicRoute {...route} isAuth={isAuth} key={route.path} />\r\n          ),\r\n        )}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ isAuth: state.auth.user.idToken });\r\n\r\nexport default connect(mapStateToProps)(NavigationRoutes);\r\n","import React from 'react';\r\nimport { mainRoutes } from '../../routes/mainRoutes';\r\nimport NavigationRoutes from '../navigation/NavigationRoutes';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <NavigationRoutes routes={mainRoutes} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Header from '../header/Header';\r\nimport Main from '../main/Main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Main />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport store, { persistor } from './redux/store';\r\nimport App from './components/app/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}